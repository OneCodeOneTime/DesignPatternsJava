?模板模式（Template），顾名思义，类似于一种格式，相似的框架，不同的个性化。
定义：父类定义了一个流程框架，流程框架中的方法有普通方法和抽象方法。这些抽象方法
可以延迟到子类实现，总结起来就是子类实现了流程中的个性化。


?角色组成
①抽象模板（Abstract Template）：
 1.给出一个逻辑流程的完整框架方法，流程中的方法可以是具体方法或抽象方法，实现一个业务或算法逻辑。
 2.定义流程框架中的抽象方法，待子类实现。
②具体模板（Concrete Template）：
实现流程骨架中的可变部分。且可通过钩子方法影响 流程。


?抽象模板中的方法：
① 模板方法：搭建逻辑框架，比如业务流程，一般修饰为final，防止子类的重写。
② 普通方法：逻辑框架中的固定步骤，一般子类最好不建议重写这部分的方法，代表了流程中的固定部分。
③ 钩子方法（Hook Method）：一般提供空实现，子类去拓展，从而达到影响逻辑的效果。
④ 抽象方法：逻辑框架中的可变步骤，交由子类实现。


?模板模式的步骤：
①定义一个抽象模板类，抽象类中定义一组抽象方法、普通方法和钩子方法。
②抽象模板类类使用①中定义的各种方法实现一个模板方法，定义大致的框架流程。
③子类继承抽象模板类，并实现抽象模板类中的抽象方法，也可通过复写钩子方法来改变抽象模板类的模板方法的流程。


?模板方法的优点：
①减少了大量的重复代码，比如JDBC。
②助于算法的扩展。
③“开放-封闭原则”

?模板方法的缺点：
①类的数量会大大增加。